# Generated by Django 5.2.5 on 2025-08-06 23:45

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Garages',
            fields=[
                ('id', models.BigAutoField(db_column='id', editable=False, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(db_column='uuid', db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at', db_index=True, help_text='Created at', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', help_text='Updated at', null=True, verbose_name='Updated at')),
                ('deleted_at', models.DateTimeField(blank=True, db_column='deleted_at', help_text='Deleted at', null=True, verbose_name='Deleted at')),
                ('name', models.CharField(help_text='Name for the garage.', verbose_name='Name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this garage should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
            ],
            options={
                'verbose_name': 'garage',
                'verbose_name_plural': 'garages',
                'db_table': 'parking_garages',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalReservation',
            fields=[
                ('id', models.BigAutoField(db_column='id', editable=False, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(db_column='uuid', db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at', db_index=True, help_text='Created at', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', help_text='Updated at', null=True, verbose_name='Updated at')),
                ('deleted_at', models.DateTimeField(blank=True, db_column='deleted_at', help_text='Deleted at', null=True, verbose_name='Deleted at')),
                ('plate', models.CharField(help_text='Name for the garage.', verbose_name='Name')),
                ('day', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('garage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historicalreservations', related_query_name='historicalreservation', to='parking.garages')),
            ],
            options={
                'verbose_name': 'historical_reservation',
                'verbose_name_plural': 'historical_reservations',
                'db_table': 'parking_historical_reservation',
                'ordering': ['plate'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(db_column='id', editable=False, primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(db_column='uuid', db_index=True, default=uuid.uuid4, editable=False, unique=True, verbose_name='uuid')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at', db_index=True, help_text='Created at', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at', help_text='Updated at', null=True, verbose_name='Updated at')),
                ('deleted_at', models.DateTimeField(blank=True, db_column='deleted_at', help_text='Deleted at', null=True, verbose_name='Deleted at')),
                ('plate', models.CharField(help_text='Name for the garage.', unique=True, verbose_name='Name')),
                ('day', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this garage should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('garage', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', related_query_name='reservation', to='parking.garages')),
            ],
            options={
                'verbose_name': 'reservation',
                'verbose_name_plural': 'reservations',
                'db_table': 'parking_reservation',
                'ordering': ['plate'],
            },
        ),
    ]
